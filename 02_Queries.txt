---------------------FERRETERIA-------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
-- CLIENTES (Nrocli,     NyApe,       Domicilio, Localidad, Saldocli)
-- FACTURAS (Nrofactura, Cliente,     Fecha)
-- DETALLES (Nrofactura, Renglón,     Articulo,  Cantidad,  Preciouni)
-- ARTICULOS(Nroartic,   Descripción, Rubro,     Stock,     Pto_reposicion, precio)
-- RUBROS   (Cod_rubro,  Descripción)
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

A) Hallar los clientes deudores ordenado en forma alfabetica

SELECT *
FROM CLIENTES
WHERE saldocli<0
ORDER BY NyApe;

-- otra forma de resolver

select Nyape
from clientes
where saldocli<0 
order by Nyape; 

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

B) Hallar los articulos que se deberían reponer

select *
from articulos
where stock < pto_reposicion;

-- otra forma de resolver

select  stock, descripcion
from articulos
where stock <= pto_reposicion
order by stock ;

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

C) Averiguar los clientes que viven en Capital

select *
from clientes
where (localidad = 'Capital Federal');

-- otra forma de resolver

select nyape, domicilio, localidad
from clientes
where localidad ilike 'Capital Federal'
order by 1; -- N°1 es nyape, no es nrocli. (order by segun orden de select, no de tabla clientes)

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

D) Averiguar los clientes que vivan en Capital o en Carapachay y no sean deudores

select * 
from clientes 
where (localidad = 'Capital Federal' or 
localidad = 'Carapachay') and saldocli>0;

-- otra forma de resolver

select *
from clientes 
where (localidad ilike 'Carapachay' 
or localidad ilike 'Capital Federal') and saldocli>=0;

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

E) Averiguar la cantidad de cada uno de los artículos vendidos durante
marzo del 2010, ordenado segun la cantidad vendida.
(Rsta: 12 FILAS)

SELECT a.Nroartic, descripcion, sum(cantidad)cantidad
from Facturas f, Articulos a, Detalles d
where a.Nroartic = d.articulo 
and d.nrofactura = f.nrofactura
and f.fecha between '2010/03/01' and '2010/03/31'
group by a.nroartic, descripcion
order by cantidad

-- Otra forma de resolver

SELECT A.DESCRIPCION, SUM(CANTIDAD)CANTIDAD
FROM FACTURAS F, DETALLES D, ARTICULOS A
WHERE F.NROFACTURA=D.NROFACTURA
AND A.NROARTIC=D.ARTICULO
AND F.FECHA BETWEEN '2010/03/01' and '2010/03/31'--'1/3/2010' AND '31/3/2010'
GROUP BY A.DESCRIPCION
ORDER BY CANTIDAD
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

F) Hallar los importes totales día a día durante abril del 2010, ordenados en
forma decreciente

SELECT FECHA, SUM(D.CANTIDAD*D.PRECIOUNI) CANT 
FROM FACTURAS F, DETALLES D 
WHERE D.NROFACTURA=F.NROFACTURA
AND FECHA BETWEEN '1/4/2010' AND '30/4/2010'
GROUP BY FECHA
ORDER BY FECHA DESC
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

G) Listar los rubros que posean actualmente stock por debajo del punto de reposición

select rubro
from articulos
where stock < pto_reposicion;

select r.*, a.*
from rubros r, articulos a
where r.cod_rubro = a.rubro and stock < pto_reposicion
order by cod_rubro;

/*SELECT DISTINCT R.DESCRIPCION FROM ARTICULOS A, RUBROS R
WHERE STOCK>PTO_REPOSICION
AND R.COD_RUBRO=A.RUBRO*/

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

H) Obtener las fechas en las que se hayan vendido más de $100.-
(Rsta: filas 20)
 
/*SELECT FECHA, SUM(CANTIDAD*PRECIOUNI) FROM DETALLES D, FACTURAS F
WHERE D.NROFACTURA=F.NROFACTURA
GROUP BY FECHA
HAVING SUM(CANTIDAD*PRECIOUNI)>100
*/

H.2) Obtener la fecha en las que mas se facturo
--    (2010-03-17 - $429)

SELECT f.fecha, SUM(preciouni*cantidad) as total
FROM DETALLES d, FACTURAS f
WHERE f.nrofactura = d.nrofactura
GROUP BY fecha
HAVING SUM(preciouni*cantidad) =  (SELECT MAX(t.importe)
		                   			FROM   (SELECT f.fecha as fechas, SUM(preciouni*cantidad) as importe
				           					FROM DETALLES d, FACTURAS f
				           					WHERE f.nrofactura = d.nrofactura
				           					GROUP BY fecha
				           					ORDER BY importe DESC) as t 
		                  			)
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

I) Averiguar los rubros con movimientos del 15 al 30 de Abril del 2010 (Rsta: 3 filas)

select rubro
from facturas f, detalles d, articulos a
where f.nrofactura = d.nrofactura
and d.articulo = a.nroartic
and fecha between '2010/04/15' and '2010/04/30'
group by rubro


--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

J) Listar Numero y nombre de los cliente. Además, listar la cantidad de facturas que tuvo
durante Marzo y Abril del 2010 considerando SOLO las facturas en las que compro articulos
del rubro 3, ordenado por numero de cliente. (Rsta: 7 filas)

select c.nrocli, c.nyape, count(*)
from clientes c, facturas f
where c.nrocli=f.cliente 
and fecha between '2010/3/1' and '2010/4/30'
and f.nrofactura in (select d.nrofactura 
		     from detalles d, articulos a 
		     where d.articulo=a.nroartic
		     and a.rubro=3)
group by nrocli, nyape
order by 1 --(nrocli)
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

K) Listar Numero y nombre de los cliente y la cantidad de facturas que tuvo durante
Marzo y Abril del 2010 con articulos del rubro 3 y CON MAS DE 3 FACTURAS, 
ordenado por numero de cliente. (Rsta: 1 fila)

select c.nrocli, c.nyape--, a.rubro
from facturas f, detalles d, articulos a, clientes c
where f.cliente = c.nrocli
and d.nrofactura = f.nrofactura 
and d.articulo = a.nroartic
and f.fecha between '01/03/2010' and '30/04/2010'
group by c.nrocli, a.rubro
having a.rubro = 3
and count (f.cliente ) > 3 


--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

L) Calcular la cantidad de unidades del artículo 4040 vendidas en marzo del 2010.
(Rsta: 8 articulos)


select d.articulo, sum (d.cantidad)
from detalles d, facturas f
where f.nrofactura = d.nrofactura
and f.fecha between '01/03/2010' and '31/03/2010'
group by d.articulo
having d.articulo = 4040

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

M) Calcular la cantidad de facturas en las que vendieron artículos del rubro 3
(Rsta: 26 facturas)

select d.nrofactura 
from articulos a,  detalles d
where a.nroartic = d.articulo
and rubro = 3 
group by d.nrofactura
order by d.nrofactura
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

N) Obtener el promedio del importe diario de las ventas del mes de mayo del 2010.

select sum(preciouni*cantidad) / 31 as promedio
from detalles d, facturas f
where d.nrofactura = f.nrofactura
and fecha between '2010/05/01' and '2010/05/31'
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

O) Listar el numero, nombre, apellido y el total facturado de los clientes que 
hayan gastado más de $150 durante el mes de mayo de 2010.


select f.cliente, c.nyape 
from detalles d, facturas f, clientes c
where d.nrofactura = f.nrofactura
and f.cliente = c.nrocli
and fecha between '2010/05/01' and '2010/05/31'
group by f.cliente, c.nyape
having sum(cantidad * preciouni) > 150

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

P) Listar los articulos que tengan un stock menor al stock minimo y NO se hayan
vendido en Junio del 2010
Resultado: 1 fila


select *
from articulos 
where stock < pto_reposicion 
and nroartic not in(select d.articulo
from detalles d, facturas f, articulos a
where d.nrofactura = f.nrofactura
and fecha between '2010/6/1' and '2010/6/30'
and a.nroartic = d.articulo)
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

Q) Listar los artículos que tengan un precio mayor a la mitad del precio
promedio de los artículos y un stock mínimo mayor a 200 unidades. (6 filas)

select *
from articulos
where stock > 200
and precio > (select avg(precio)/2 as precio
		from articulos)

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

*/R) Listar los datos cabecera de las Facturas de mas de $200 y que la cantidad
de artículos facturados en la misma sea mayor a 30 
(Rsta: 4 filas)*/

select nrofactura, sum(cantidad * preciouni) as totalfacturado
from detalles 
group by nrofactura
having sum(cantidad * preciouni)>200
and sum(cantidad) > 30
order by nrofactura
-------------o-------------DOS--ALTERNATIVAS
SELECT f.nrofactura, f.cliente
FROM facturas f
INNER JOIN detalles d ON  (d.nrofactura = f.nrofactura)
GROUP BY f.nrofactura,f.cliente
HAVING SUM(d.cantidad) > 30
AND SUM(d.preciouni)*SUM(d.cantidad) > 200
order by f.nrofactura
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

/*S) Listar los datos cabecera de las Facturas de mas de $200 y que la cantidad
de artículos facturados en la misma sea mayor al 5% del stock promedio
de los rubros "Herramienta%"
(Rsta: 5 FILAS)*/

select d.nrofactura, a.nroartic, sum(cantidad * preciouni) as facturado
from detalles d, articulos a
where d.articulo = a.nroartic
group by d.nrofactura, a.nroartic
having sum(d.cantidad * d.preciouni) > 200
and stock >	(select avg (stock) *0.05
		 from articulos a, rubros r
		 where a.rubro = r.cod_rubro
		 and r.cod_rubro = 1)

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

T) Listar los clientes que en Junio compraron TODOS los articulos del rubro "Tornillo"


select * 
from clientes c
where not exists( select * 
                  from articulos a 
                  where rubro = (select cod_rubro 
                                 from rubros r 
				 where cod_rubro = 2) --descripcion ilike '%tornillos%')
                                 and not exists (select cliente, articulo 
				                 from facturas f, detalles d
				                 where f.nrofactura=d.nrofactura---JOIN
				                 and fecha between '2010/6/1' and '2010/6/30'
				                 and cliente = c.nrocli-----??????
						 and a.nroartic=d.articulo)---JOIN
		)

--------------------------------------------------------------------------------------
select *
from clientes c
where not exists (select *
		  from articulos a
		  where descripcion ilike 'Tornillo'--Mal redactado? si pongo tornillos(que es un rubro) tira otros rubros ademas
		  and not exists (select cliente, articulo
				  from facturas f, detalles d
				  where f.nrofactura = d.nrofactura
				  and a.nroartic = d.articulo
				  and f.cliente = c.nrocli
				  and fecha between '2010/06/01' and '2010/06/30'
				  )
		 )
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------